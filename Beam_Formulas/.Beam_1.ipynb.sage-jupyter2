{"backend_state":"ready","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":97288192},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.2"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1563534303943,"exec_count":1,"id":"b051b9","input":"# Figure 8 from DA6 by American Wood Council, 2007\n# Revision History\n# 0.0 19-Jul-2019 E.Durham created initial notebook","kernel":"python3","no_halt":true,"pos":0,"start":1563534303928,"state":"done","type":"cell"}
{"cell_type":"code","end":1563534303959,"exec_count":2,"id":"b18e31","input":"# Given:\n#    span of beam, L\n#    magnitude of load, P\n#    distance from left end of beam to point of load, a\n#    distance from left end of beam to point of interest, x\n#    EI of member, use 1 if unknown\n# Derive:\n#    distance from right end of beam to point of load, b\n#    reactions at ends of beams, R_1 and R_2\n#    shear at points of interest\n#    bending at points of interest\n#    deflection at points of interest\n#    plot graphs of shear, moment and deflection","kernel":"python3","no_halt":true,"pos":1,"start":1563534303951,"state":"done","type":"cell"}
{"cell_type":"code","end":1563534304001,"exec_count":3,"id":"d64a8e","input":"import numpy as np\nimport matplotlib.pyplot as plt\nplt.ion()\n%matplotlib inline\nSAMPLE_SIZE = 99 # number of discrete points within beam to compute","kernel":"python3","no_halt":true,"pos":2,"start":1563534303975,"state":"done","type":"cell"}
{"cell_type":"code","end":1563534304083,"exec_count":4,"id":"bdeb68","input":"# Enter case values sans units at present\nP = 1 # kN\na = 2 # m\nL = 4 # m\nEI = 1 # kN*m**2\n# Derive distance b\nb = L - a\n# Calculate Reactions\nR_1 = (P*b)/L # reaction at left support\nR_2 = (P*a)/L # reaction at right support\n# Derive max moment\nM_max = (P*a*b)/L\nM_max","kernel":"python3","no_halt":true,"output":{"0":{"data":{"text/plain":"1.0"},"exec_count":4}},"pos":3,"start":1563534304053,"state":"done","type":"cell"}
{"cell_type":"code","end":1563534304188,"exec_count":6,"id":"11b867","input":"def moment_x(x, P, a, L):\n    \"\"\"\n    Determine moment for simple beam w/ concentrated load at any position x.\n\n    where\n    x = distance from left end of beam to point of interest\n    P = concentrated load\n    a = distance from left end of beam to point of load\n    L = length of span of beam\n\n    The function does not take or allign units. Units of x, a and L must be identical. \n\n    Returns value of moment at x in units_of_P * units_of_x\n    \"\"\"\n    b = L - a # derive b given a and L\n    if x >= 0 and x <= a:\n        M_x = (P*x*b)/L\n    elif x > a and x <= L:\n        M_x = (P*(L-x)*a)/L\n    else:\n        M_x = float('NaN')\n        print(\"Error: x cannot be less than 0 or greater than L which is {} in this case\".format(L))\n    return M_x","kernel":"python3","no_halt":true,"pos":5,"start":1563534304181,"state":"done","type":"cell"}
{"end":1563534304164,"exec_count":5,"id":"ca408b","input":"def shear_x(x, P, a, L):\n    \"\"\"\n    Determine shear for simple beam w/ concentrated load at any position x.\n    \n    where\n    x = distance from left end of beam to point of interest\n    P = concentrated load\n    a = distance from left end of beam to point of load\n    L = length of span of beam\n\n    The function does not take or allign units. Units of x, a and L must be identical. \n\n    Returns value of shear at x in units_of_P\n    \n    \"\"\"\n    b = L - a # derive b given a and L\n    if x >= 0 and x <= a:\n        V_x = (P*b)/L\n    elif x > a and x <= L:\n        V_x = -(P*a)/L\n    else:\n        V_x = float('NaN')\n        print(\"Error: x cannot be less than 0 or greater than L which is {} in this case\".format(L))\n    return V_x","kernel":"python3","no_halt":true,"pos":4,"start":1563534304158,"state":"done","type":"cell"}
{"end":1563534304261,"exec_count":7,"id":"42c1d6","input":"def deflection_x(x, P, a, L, EI=1):\n    \"\"\"\n    Determine deflection for simple beam w/ concentrated load at any position x.\n\n    where\n    x = distance from left end of beam to point of interest\n    P = concentrated load\n    a = distance from left end of beam to point of load\n    L = length of span of beam\n    EI = modulus of elasticity of material in units_of_P / units_of_L**2 times\n    second moment of area in units_of_L**4. Thus, EI is in units_of_P * units_of_L**2.\n    Default value for EI is 1 in which case values returned are overstated by actual value\n    of EI. That is, to determine deflection for a given EI, divide deflection here by\n    actual value of EI.\n\n    The function does not take or allign units. Units of x, a and L must be identical. \n\n    Returns value of deflection at x in units_of_L\n    \"\"\"\n    b = L - a # derive b given a and L\n    if x == a:\n        deflection_x = -(P*a**2*b**2)/(3*EI*L)\n    elif x >= 0 and x < a:\n        deflection_x = -((P*b*x)/(6*EI*L))*(L**2-b**2-x**2)\n    elif x > a and x <= L:\n        deflection_x = -((P*a*(L-x))/(6*EI*L))*(2*L*x-x**2-a**2)\n    else:\n        deflection_x = float('NaN')\n        print(\"Error: x cannot be less than 0 or greater than L which is {} in this case\".format(L))\n    return deflection_x","kernel":"python3","no_halt":true,"pos":6,"start":1563534304207,"state":"done","type":"cell"}
{"end":1563534304294,"exec_count":8,"id":"55a26d","input":"# create beam array and load with position, shear, moment and deflection values\nbeam = np.zeros((4, SAMPLE_SIZE))\nbeam[0, : ] = np.linspace(0, L, SAMPLE_SIZE) # position\nfor i in range(SAMPLE_SIZE):\n    beam[1, i] = shear_x(beam[0, i], P, a, L) # stuff shear values\n    beam[2, i] = moment_x(beam[0, i], P, a, L) # stuff moment values\n    beam[3, i] = deflection_x(beam[0, i], P, a, L, EI) # stuff deflection values\nbeam[0:]","kernel":"python3","no_halt":true,"output":{"0":{"data":{"text/plain":"array([[ 0.        ,  0.04081633,  0.08163265,  0.12244898,  0.16326531,\n         0.20408163,  0.24489796,  0.28571429,  0.32653061,  0.36734694,\n         0.40816327,  0.44897959,  0.48979592,  0.53061224,  0.57142857,\n         0.6122449 ,  0.65306122,  0.69387755,  0.73469388,  0.7755102 ,\n         0.81632653,  0.85714286,  0.89795918,  0.93877551,  0.97959184,\n         1.02040816,  1.06122449,  1.10204082,  1.14285714,  1.18367347,\n         1.2244898 ,  1.26530612,  1.30612245,  1.34693878,  1.3877551 ,\n         1.42857143,  1.46938776,  1.51020408,  1.55102041,  1.59183673,\n         1.63265306,  1.67346939,  1.71428571,  1.75510204,  1.79591837,\n         1.83673469,  1.87755102,  1.91836735,  1.95918367,  2.        ,\n         2.04081633,  2.08163265,  2.12244898,  2.16326531,  2.20408163,\n         2.24489796,  2.28571429,  2.32653061,  2.36734694,  2.40816327,\n         2.44897959,  2.48979592,  2.53061224,  2.57142857,  2.6122449 ,\n         2.65306122,  2.69387755,  2.73469388,  2.7755102 ,  2.81632653,\n         2.85714286,  2.89795918,  2.93877551,  2.97959184,  3.02040816,\n         3.06122449,  3.10204082,  3.14285714,  3.18367347,  3.2244898 ,\n         3.26530612,  3.30612245,  3.34693878,  3.3877551 ,  3.42857143,\n         3.46938776,  3.51020408,  3.55102041,  3.59183673,  3.63265306,\n         3.67346939,  3.71428571,  3.75510204,  3.79591837,  3.83673469,\n         3.87755102,  3.91836735,  3.95918367,  4.        ],\n       [ 0.5       ,  0.5       ,  0.5       ,  0.5       ,  0.5       ,\n         0.5       ,  0.5       ,  0.5       ,  0.5       ,  0.5       ,\n         0.5       ,  0.5       ,  0.5       ,  0.5       ,  0.5       ,\n         0.5       ,  0.5       ,  0.5       ,  0.5       ,  0.5       ,\n         0.5       ,  0.5       ,  0.5       ,  0.5       ,  0.5       ,\n         0.5       ,  0.5       ,  0.5       ,  0.5       ,  0.5       ,\n         0.5       ,  0.5       ,  0.5       ,  0.5       ,  0.5       ,\n         0.5       ,  0.5       ,  0.5       ,  0.5       ,  0.5       ,\n         0.5       ,  0.5       ,  0.5       ,  0.5       ,  0.5       ,\n         0.5       ,  0.5       ,  0.5       ,  0.5       ,  0.5       ,\n        -0.5       , -0.5       , -0.5       , -0.5       , -0.5       ,\n        -0.5       , -0.5       , -0.5       , -0.5       , -0.5       ,\n        -0.5       , -0.5       , -0.5       , -0.5       , -0.5       ,\n        -0.5       , -0.5       , -0.5       , -0.5       , -0.5       ,\n        -0.5       , -0.5       , -0.5       , -0.5       , -0.5       ,\n        -0.5       , -0.5       , -0.5       , -0.5       , -0.5       ,\n        -0.5       , -0.5       , -0.5       , -0.5       , -0.5       ,\n        -0.5       , -0.5       , -0.5       , -0.5       , -0.5       ,\n        -0.5       , -0.5       , -0.5       , -0.5       , -0.5       ,\n        -0.5       , -0.5       , -0.5       , -0.5       ],\n       [ 0.        ,  0.02040816,  0.04081633,  0.06122449,  0.08163265,\n         0.10204082,  0.12244898,  0.14285714,  0.16326531,  0.18367347,\n         0.20408163,  0.2244898 ,  0.24489796,  0.26530612,  0.28571429,\n         0.30612245,  0.32653061,  0.34693878,  0.36734694,  0.3877551 ,\n         0.40816327,  0.42857143,  0.44897959,  0.46938776,  0.48979592,\n         0.51020408,  0.53061224,  0.55102041,  0.57142857,  0.59183673,\n         0.6122449 ,  0.63265306,  0.65306122,  0.67346939,  0.69387755,\n         0.71428571,  0.73469388,  0.75510204,  0.7755102 ,  0.79591837,\n         0.81632653,  0.83673469,  0.85714286,  0.87755102,  0.89795918,\n         0.91836735,  0.93877551,  0.95918367,  0.97959184,  1.        ,\n         0.97959184,  0.95918367,  0.93877551,  0.91836735,  0.89795918,\n         0.87755102,  0.85714286,  0.83673469,  0.81632653,  0.79591837,\n         0.7755102 ,  0.75510204,  0.73469388,  0.71428571,  0.69387755,\n         0.67346939,  0.65306122,  0.63265306,  0.6122449 ,  0.59183673,\n         0.57142857,  0.55102041,  0.53061224,  0.51020408,  0.48979592,\n         0.46938776,  0.44897959,  0.42857143,  0.40816327,  0.3877551 ,\n         0.36734694,  0.34693878,  0.32653061,  0.30612245,  0.28571429,\n         0.26530612,  0.24489796,  0.2244898 ,  0.20408163,  0.18367347,\n         0.16326531,  0.14285714,  0.12244898,  0.10204082,  0.08163265,\n         0.06122449,  0.04081633,  0.02040816,  0.        ],\n       [-0.        , -0.04081066, -0.08158732, -0.12229598, -0.16290265,\n        -0.20337331, -0.24367398, -0.28377065, -0.32362933, -0.36321601,\n        -0.40249669, -0.44143738, -0.48000408, -0.51816278, -0.55587949,\n        -0.59312021, -0.62985094, -0.66603768, -0.70164642, -0.73664318,\n        -0.77099395, -0.80466472, -0.83762151, -0.86983031, -0.90125713,\n        -0.93186796, -0.9616288 , -0.99050566, -1.01846453, -1.04547142,\n        -1.07149232, -1.09649324, -1.12044018, -1.14329914, -1.16503611,\n        -1.1856171 , -1.20500812, -1.22317515, -1.24008421, -1.25570128,\n        -1.26999238, -1.2829235 , -1.29446064, -1.30456981, -1.313217  ,\n        -1.32036821, -1.32598945, -1.33004672, -1.33250601, -1.33333333,\n        -1.33250601, -1.33004672, -1.32598945, -1.32036821, -1.313217  ,\n        -1.30456981, -1.29446064, -1.2829235 , -1.26999238, -1.25570128,\n        -1.24008421, -1.22317515, -1.20500812, -1.1856171 , -1.16503611,\n        -1.14329914, -1.12044018, -1.09649324, -1.07149232, -1.04547142,\n        -1.01846453, -0.99050566, -0.9616288 , -0.93186796, -0.90125713,\n        -0.86983031, -0.83762151, -0.80466472, -0.77099395, -0.73664318,\n        -0.70164642, -0.66603768, -0.62985094, -0.59312021, -0.55587949,\n        -0.51816278, -0.48000408, -0.44143738, -0.40249669, -0.36321601,\n        -0.32362933, -0.28377065, -0.24367398, -0.20337331, -0.16290265,\n        -0.12229598, -0.08158732, -0.04081066, -0.        ]])"},"exec_count":8}},"pos":7,"start":1563534304277,"state":"done","type":"cell"}
{"end":1563534304919,"exec_count":9,"id":"ddc690","input":"# plot shear diagram\nax = plt.plot(beam[0, : ], beam[1, : ])\nplt.grid(b=True, which='both', axis='both')\nplt.xlabel('x label')\nplt.ylabel('y label')\nplt.title('Shear Diagram')\n# plt.legend()\n# cursor = Cursor(ax, useblit=True, color='red', linewidth=2)\nplt.show()","kernel":"python3","no_halt":true,"output":{"0":{"data":{"image/png":"fb00cf3638f81bfe8571040f6f967c617ea6e717","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"image/png":{"height":277,"width":395}}}},"pos":8,"start":1563534304357,"state":"done","type":"cell"}
{"end":1563534305794,"exec_count":10,"id":"f316cb","input":"# from matplotlib.widgets import Cursor\nbx = plt.plot(beam[0, : ], beam[2, : ])\nplt.grid(b=True, which='both', axis='both')\nplt.xlabel('x label')\nplt.ylabel('y label')\nplt.title('Moment Diagram')\n# plt.legend()\n# cursor = Cursor(ax, useblit=True, color='red', linewidth=2)\nplt.show()","kernel":"python3","no_halt":true,"output":{"0":{"data":{"image/png":"babd06d5a102ee1e5ddfdbcaf59bd1be9fbd400e","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"image/png":{"height":277,"width":387}}}},"pos":9,"start":1563534304934,"state":"done","type":"cell"}
{"end":1563534306328,"exec_count":11,"id":"adcc0c","input":"# plot deflection diagram\ncx = plt.plot(beam[0, : ], beam[3, : ])\nplt.grid(b=True, which='both', axis='both')\nplt.xlabel('x label')\nplt.ylabel('Units of L')\nplt.title('Deflection Diagram')\n# plt.legend()\nplt.show()","kernel":"python3","no_halt":true,"output":{"0":{"data":{"image/png":"6926fb67b649f87fab002266513f2bf4c1dc1e89","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"image/png":{"height":277,"width":395}}}},"pos":10,"start":1563534305810,"state":"done","type":"cell"}
{"id":0,"time":1563533997414,"type":"user"}
{"last_load":1563222927933,"type":"file"}