{"backend_state":"ready","kernel":"python3","kernel_state":"idle","metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.8"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":1,"id":"7dfad2","input":"from IPython.display import Image\nImage(\n    filename=\"./Rectangle_with_Neutral_Axis_in_centre.JPG\",\n    embed=True\n)","metadata":{"deletable":false,"editable":false,"jupyter":{"source_hidden":true}},"output":{"0":{"data":{"image/jpeg":"1db3fbf60879cbef94f76e2a1a14e110f24ac8d4","text/plain":"<IPython.core.display.Image object>"},"exec_count":1,"output_type":"execute_result"}},"pos":2,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"dacc51","input":"# Setup units\nfrom pint import UnitRegistry\nunit = UnitRegistry()\nquantity = unit.Quantity\nunit.default_format = '~' # ~ for unit abreviations, P for pretty print, or both\n# Define symbols for common units\nm = unit.meter; mm = unit.millimeter; cm = unit.centimeter;\ninch = unit.inch; ft = unit.foot;\nunit_choices = ['mm', 'cm', 'm', 'inch', 'ft',]\nkN = unit.kilonewton; MPa = unit.megapascal; psi = unit.psi\n\n# Setup widgets for interactivity\nfrom ipywidgets import interact, interactive, fixed, interact_manual, HBox, Label\nimport ipywidgets as widgets\nfrom IPython.display import display\n\nwidget_b_label = widgets.Label('Width or breadth, $b$:')\nwidget_b = widgets.FloatSlider(\n    value = 89.0,\n    min = 0.0,\n    max = 99999,\n    step = 0.001,\n    disabled = False,\n)\nwidget_b_units = widgets.Dropdown(\n    options = unit_choices,\n    value = 'mm',\n    description = 'Unit',\n    disabled = False,\n    )\n\nwidget_d_label = widgets.Label('Height or depth, $d$:')\nwidget_d = widgets.FloatSlider(\n    value = 89.0,\n    min = 0.0,\n    max = 99999,\n    step = 0.001,\n    disabled = False,\n)\nwidget_d_units = widgets.Dropdown(\n    options = unit_choices,\n    value = 'mm',\n    description = 'Unit',\n    disabled = False,\n    )\n\nwidget_output_label = widgets.Label('Desired unit for results:')\nwidget_output_units = widgets.Dropdown(\n    options = unit_choices,\n    value = 'mm',\n    description = 'Unit',\n    disabled = False,\n    )\n\n# Display instructions and widgets to user\nprint('Enter dimensions and units below.')\nprint('Note: Press ENTER after changing value in floating point text boxes to register changes.')\ndisplay(\n    HBox([widget_b_label, widget_b, widget_b_units, ]),\n    HBox([widget_d_label, widget_d, widget_d_units, ]),\n    HBox([widget_output_label, widget_output_units]),\n    )\nprint('')\nprint('NOTE: AFTER entering dimensions and units above,', \n      'FIRST, CLICK on the cell directly below this,\\n',\n      'THEN--using Menus above--\\n',\n      'CLICK \"Cell/Run all Below\" to update the Notebook')","metadata":{"deletable":false,"editable":true,"jupyter":{"source_hidden":false}},"output":{"0":{"name":"stdout","output_type":"stream","text":"Enter dimensions and units below.\nNote: Press ENTER after changing value in floating point text boxes to register changes.\n"},"1":{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"35b97a91cd7448d19cb37ab018345e22","version_major":2,"version_minor":0},"text/plain":"HBox(children=(Label(value='Width or breadth, $b$:'), FloatSlider(value=89.0, max=99999.0, step=0.001), Dropdo…"},"exec_count":2,"output_type":"execute_result"},"2":{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8613717a346c48d581bdfb9d385b33bc","version_major":2,"version_minor":0},"text/plain":"HBox(children=(Label(value='Height or depth, $d$:'), FloatSlider(value=89.0, max=99999.0, step=0.001), Dropdow…"},"exec_count":2,"output_type":"execute_result"},"3":{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1cdac633330e483e8be9f234ad2410fa","version_major":2,"version_minor":0},"text/plain":"HBox(children=(Label(value='Desired unit for results:'), Dropdown(description='Unit', options=('mm', 'cm', 'm'…"},"exec_count":2,"output_type":"execute_result"},"4":{"name":"stdout","output_type":"stream","text":"\nNOTE: AFTER entering dimensions and units above, FIRST, CLICK on the cell directly below this,\n THEN--using Menus above--\n CLICK \"Cell/Run all Below\" to update the Notebook\n"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"92d2a5","input":"b = quantity(widget_b.value, widget_b_units.value)\nd = quantity(widget_d.value, widget_d_units.value)\n\n# Convert b and d to desired output units\nb.ito(widget_output_units.value)\nd.ito(widget_output_units.value)\n\n# Derive Geometric Properties - See bottom of notebook for pretty formulas\nA = b*d\nSx = (b*d**2)/6\nSy = (d*b**2)/6\nZx = (b*d**2)/4\nZy = (d*b**2)/4\nIx = (b*d**3)/12\nIy = (d*b**3)/12\nrx = d/(12**0.5)\nry = b/(12**0.5)\ncx = d/2\ncy = b/2\n\n# Define Output\nprint('Given:')\nprint(' Width or breadth, b = {0:n} {1} and'.format(b.magnitude, b.units))\nprint(' Height or depth, d = {0:n} {1}'.format(d.magnitude, d.units))\nprint('')\nprint('Geometric Properties:')\nprint(' Area, A = {0:n} {1}'.format(A.magnitude, A.units))\nprint(' Major Elastic Section Modulus, Sx = {0:n} {1}'.format(Sx.magnitude,\n    Sx.units))\nprint(' Minor Elastic Section Modulus, Sy = {0:n} {1}'.format(Sy.magnitude,\n    Sy.units))\nprint(' Major Plastic Section Modulus, Zx = {0:n} {1}'.format(Zx.magnitude,\n    Zx.units))\nprint(' Minor Plastic Section Modulus, Zy = {0:n} {1}'.format(Zy.magnitude,\n    Zy.units))\nprint(' Major Second Moment of Inertia, Ix = {0:n} {1}'.format(Ix.magnitude,\n    Ix.units))\nprint(' Minor Second Moment of Inertia, Iy = {0:n} {1}'.format(Iy.magnitude,\n    Iy.units))\nprint(' Major Radius of Gyration, rx = {0:n} {1}'.format(rx.magnitude,\n    rx.units))\nprint(' Minor Radius of Gyration, ry = {0:n} {1}'.format(ry.magnitude,\n    ry.units))\nprint(' Distance from Major Axis to Extreme Fibre, cx = {0:n} {1}'.format(\n    cx.magnitude, cx.units))\nprint(' Distance from Minor Axis to Extreme Fibre, cy = {0:n} {1}'.format(\n    cy.magnitude, cy.units))","metadata":{"jupyter":{"source_hidden":true}},"output":{"0":{"name":"stdout","output_type":"stream","text":"Given:\n Width or breadth, b = 38.1 mm and\n Height or depth, d = 88.9 mm\n\nGeometric Properties:\n Area, A = 3387.09 mm ** 2\n Major Elastic Section Modulus, Sx = 50185.4 mm ** 3\n Minor Elastic Section Modulus, Sy = 21508 mm ** 3\n Major Plastic Section Modulus, Zx = 75278.1 mm ** 3\n Minor Plastic Section Modulus, Zy = 32262 mm ** 3\n Major Second Moment of Inertia, Ix = 2.23074e+06 mm ** 4\n Minor Second Moment of Inertia, Iy = 409728 mm ** 4\n Major Radius of Gyration, rx = 25.6632 mm\n Minor Radius of Gyration, ry = 10.9985 mm\n Distance from Major Axis to Extreme Fibre, cx = 44.45 mm\n Distance from Minor Axis to Extreme Fibre, cy = 19.05 mm\n"}},"pos":4,"type":"cell"}
{"cell_type":"markdown","id":"229b14","input":"**ToDo / Issues:**\n- Add interaction to formulas so that values are immediately updated as user updates dimensions and units so that the user does not need to re-run each of the cells to get results\n- Add demonstration of symPy package\n- Floating point text boxes do not show more than 2 digits\n- Add autoscaling or right-sizing to rounding function and then results","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"4d18a4","input":"Rectangle - Neutral Axis in Middle - Rev 0.4","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"72181e","input":"**Formulas:**  \n\nArea, $A = bd$  \nElastic Section Modulus, $S_x = bd^2/6$, $S_y = db^2/6$  \nPlastic Section Modulus, $Z_x = bd^2/4$, $Z_y = db^2/4$  \nSecond Moment of Inertia, $I_x = bd^3/12$, $I_y = db^3/12$  \nRadius of Gyration, $r_x = d/\\sqrt12$, $r_y = b/\\sqrt12$  \nDistance from bottom left corner to centroid, $c_x = d/2$, $c_y = b/2$  ","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"75523e","input":"**Abstract:**  \nGiven: breadth or width b and depth or height d and units of each  \nReturns: Area, Section Modulus, Plastic Modulus, Second Moment of Inertia, Radius of Gyration, and distance to centroid  \n\n**Instructions:**  \nEnter breadth, depth and units below the following code cell:","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"7a830b","input":"**Revision History:**  \n- Rev 0.4  23-Jun-2019 E.Durham Added widgets for input of dimensions and units and graphic\n- Rev 0.3  19-Jun-2019 E.Durham Added units  \n- Rev 0.2  18-Jun-2019 E.Durham Added Plastic Section Modulus and revised formatting  \n- Rev 0.0  28-Mar-2019 E.Durham Created notebook using Figure 11.4 from Wood Design Manual 2017","pos":6,"type":"cell"}
{"last_load":1561974769004,"type":"file"}